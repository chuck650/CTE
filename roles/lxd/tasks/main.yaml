---
- name: Remove deprecated packages
  apt:
    name: "{{ item }}"
    state: absent
  with_items:
    - lxd
    - lxc
    - lxd-client
  become: yes
  when: ansible_facts['os_family'] == "Debian"

- name: Install apt packages
  apt:
    name: "{{ item }}"
    state: latest
  with_items:
    - snapd
    - zfsutils-linux
  become: yes
  when: ansible_facts['os_family'] == "Debian"

- name: Install lxd snap package
  snap:
    name: "{{ item }}"
    state: present
    classic: yes
  with_items:
    - lxd
  become: yes
  when: ansible_system == "Linux"

- name: Add user to lxd group
  user:
    name: "{{ ansible_user_id }}"
    groups: lxd
  become: yes
  when: ansible_system == "Linux"

- name: Check lxd storage config
  command: lxc storage get default source
  become: yes
  register: lxd_storage
  changed_when: lxd_storage.rc != 0
  failed_when: false
  notify: Initialize LXD
  when: ansible_system == "Linux"

- name: Show lxd storage pool location
  debug:
    msg: "{{ lxd_storage.stdout }}"

- name: Check ZFS Pool
  command: zpool list -Ho health default
  become: yes
  register: zpool
  ignore_errors: true
  changed_when: zpool.rc == 1
  failed_when: false
  notify: Fix default pool
  check_mode: false
  when:
    - ansible_system == "Linux"
    - lxd_storage.rc == 0

#- name: Create a profile
#  debug:
#    msg: "{{ lookup('template', 'user-data.yaml.j2') | from_yaml }}"
#  vars:
#    user:
#      name: "{{ ansible_user_id }}"
#      password: "{{ cte_user_password | default('password') }}"
#      gecos: "{{ ansible_user_gecos.split(',')[0] }}"
#    ssh_keys:
#      - "{{ lookup('file', ansible_user_dir + '/.ssh/id_rsa.pub') }}"
#      - "{{ lookup('file', ansible_user_dir + '/.ssh/id_ecdsa.pub') }}"

# Create cte profile with user.user-data, timezone, packages, etc...
- name: Create a profile
  lxd_profile:
    name: cte-user
    state: present
    config:
      user.user-data: "{{ lookup('template', 'user-data.yaml.j2') }}"
#      "{{ lookup('template', 'user-data.yaml.j2') | from_yaml }}"
    description: CTE user-data profile
  become: yes
  vars:
    user:
      name: "{{ ansible_user_id }}"
      password: "{{ cte_user_password | default('password') }}"
      gecos: "{{ ansible_user_gecos.split(',')[0] }}"
    ssh_keys:
      - "{{ lookup('file', ansible_user_dir + '/.ssh/id_rsa.pub') }}"
      - "{{ lookup('file', ansible_user_dir + '/.ssh/id_ecdsa.pub') }}"
